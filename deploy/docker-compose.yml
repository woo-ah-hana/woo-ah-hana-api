version: "3.7"
services:
  spring:
    container_name: spring
    image: yoonyounghun/woo-ah-hana-api
    ports:
      - "8080:8080"
    volumes:
      - /var/log/:/logs/
    depends_on:
      - redis
      - db
    environment:
      - NAVER_CLIENT_ID=${NAVER_CLIENT_ID}
      - NAVER_CLIENT_SECRET=${NAVER_CLIENT_SECRET}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - FIREBASE_CREDENTIALS=${FIREBASE_CREDENTIALS}
      - STT_CLIENT_ID=${STT_CLIENT_ID}
      - STT_CLIENT_SECRET=${STT_CLIENT_SECRET}
    networks:
      - api-net
  db:
    image: postgres:16
    ports:
      - '5432:5432'
    volumes:
      - ./postgresql/mount:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=woo-ah-hana
      - POSTGRES_PASSWORD=woo-ah-hana
    networks:
      - api-net
  redis:
    image: redis:latest
    ports:
      - '6379:6379'
    networks:
      - api-net
  account:
    image: yoonyounghun/woo-ah-account:latest
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    ports:
      - '8000:8000'
    depends_on:
      - db
      - redis
    restart: always
    networks:
      - api-net
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      - FAST_DB_HOST=db
      - FAST_DB_PORT=5432
      - FAST_POSTGRES_USER=woo-ah-hana
      - FAST_POSTGRES_DATABASE_NAME=woo-ah-hana
      - FAST_POSTGRES_PASSWORD=woo-ah-hana

networks:
  api-net:
    driver: bridge
